import numpy as np
from tensorflow.keras.preprocessing.text import Tokenizer
import pandas as pd
from tensorflow.keras.utils import to_categorical

text1 = '나는 지금 진짜 진짜 매우 매우 맛있는 김밥을 엄청 마구 마구 마구 마구 먹었다.'
text2 = '태운이는 선생을 괴롭힌다. 준영이는 못생겼다. 사영이는 마구 마구 더 못생겼다.'

#맹글기

token = Tokenizer()
token.fit_on_texts([text1, text2])

print(token.word_index)  # 1. 많이 나오는 순서, 2. 먼저 나오는 순서
#{'마구': 1, '진짜': 2, '매우': 3, '못생겼다': 4, '나는': 5, '지금': 6, '맛있는': 7, '김밥을': 8, '엄청': 9, '먹었다': 10, '태운이는': 11, '선생을': 12, '괴롭힌다': 13, '준영이는': 14, '사영이는': 15, '더': 16}
print(token.word_counts)
# OrderedDict([('나는', 1), ('지금', 1), ('진짜', 2), ('매우', 2), ('맛있는', 1), ('김밥을', 1), ('엄청', 1), ('마구', 6), ('먹었다', 1), ('태운이는', 1), ('선생을', 1), ('괴롭힌다', 1), ('준영이는', 1), ('못생 
# 겼다', 2), ('사영이는', 1), ('더', 1)])

# text = np.concatenate((text1, text2))
# print(text)
x = token.texts_to_sequences([text1, text2])
x = np.concatenate(x)

# print(x) # [[5, 6, 2, 2, 3, 3, 7, 8, 9, 1, 1, 1, 1, 10], [11, 12, 13, 14, 4, 15, 1, 1, 16, 4]]
# print(x.shape) #리스트는 shape 없음


####### 원핫 3가지 맹글기 #########
##oneHot 1-1
# x_array = np.array(x).reshape(-1, 1)
# x = to_categorical(x_array)
# x = x[:,1:]
# print(x)
# [[0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
#  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
#  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]
# print(x.shape) # (24, 16)


# ##oneHot 1-2
# x_flatten = [item for sublist in x for item in sublist]
# print(x_flatten)
# pandas Series로 변환
# x_series = pd.Series(x_flatten)
# get_dummies로 원핫 인코딩
# x = pd.get_dummies(pd.Series(np.array(x).reshape(-1,)))

# x = pd.get_dummies(sum(x, []))
# x = np.array(x).reshape(-1,)
# x = pd.get_dummies(x)
# x = x.to_numpy()
# print(x)
#     1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16
# 0    0   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0
# 1    0   0   0   0   0   1   0   0   0   0   0   0   0   0   0   0
# 2    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
# 3    0   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0
# 4    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
# 5    0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0
# 6    0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   0
# 7    0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0
# 8    0   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0
# 9    1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
# 10   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
# 11   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
# 12   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
# 13   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0   0
# 14   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0   0
# 15   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   0
# 16   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0
# 17   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0
# 18   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
# 19   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0
# 20   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
# 21   1   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
# 22   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1
# 23   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0
# print(x.shape) #(24, 16)


# ##oneHot 1-3
from sklearn.preprocessing import OneHotEncoder
ohe = OneHotEncoder(sparse=False) #sparse=True가 기본값
x_array = np.array(x).reshape(-1, 1)
x = ohe.fit_transform(x_array)
print(x)
#[[0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
#  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
#  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]
print(x.shape) # (24,16)
